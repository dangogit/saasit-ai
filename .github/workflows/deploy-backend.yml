name: Deploy Backend to Fly.io

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch: # Allow manual deployment

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: testadmin
          MONGO_INITDB_ROOT_PASSWORD: testpassword
          MONGO_INITDB_DATABASE: saasit_test
        ports:
          - 27017:27017
        options: --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install backend dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MongoDB
        run: |
          timeout 60 bash -c 'until mongosh --eval "db.runCommand({ping: 1})" > /dev/null 2>&1; do sleep 1; done'
        env:
          MONGO_URL: mongodb://testadmin:testpassword@localhost:27017/saasit_test?authSource=admin

      - name: Run backend tests
        run: |
          cd backend
          MONGO_URL=mongodb://testadmin:testpassword@localhost:27017/saasit_test?authSource=admin \
          DB_NAME=saasit_test \
          PYTHONPATH=. \
          python -m pytest tests/ -v --tb=short
        env:
          TESTING: true
          JWT_SECRET: test-jwt-secret-for-ci
          SECRET_KEY: test-secret-key-for-ci

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: |
          cd backend
          flyctl deploy --remote-only --app saasit-ai-backend-dgoldman
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Verify deployment
        run: |
          # Wait for deployment to be ready
          sleep 30
          
          # Check health endpoint
          response=$(curl -s -o /dev/null -w "%{http_code}" https://saasit-ai-backend-dgoldman.fly.dev/api/)
          if [ "$response" != "200" ]; then
            echo "Deployment health check failed with status: $response"
            exit 1
          fi
          
          echo "‚úÖ Deployment successful and healthy!"

      - name: Post deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "üöÄ Backend successfully deployed to production!"
            echo "URL: https://saasit-ai-backend-dgoldman.fly.dev"
          else
            echo "‚ùå Backend deployment failed"
          fi